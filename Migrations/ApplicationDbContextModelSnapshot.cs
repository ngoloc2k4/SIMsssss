// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SIM_Project.Data;

#nullable disable

namespace SIM_Project.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("SIM_Project.Models.Admin", b =>
                {
                    b.Property<int>("AdminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AdminID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("AdminID");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("SIM_Project.Models.Course", b =>
                {
                    b.Property<int>("CourseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CourseID"));

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<int>("ProgrammerID")
                        .HasColumnType("int");

                    b.Property<int>("SemesterID")
                        .HasColumnType("int");

                    b.HasKey("CourseID");

                    b.HasIndex("ProgrammerID");

                    b.HasIndex("SemesterID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("SIM_Project.Models.CourseLearningOfStudent", b =>
                {
                    b.Property<int>("CourseLearningOfStudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CourseLearningOfStudentID"));

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<int>("TeacherID")
                        .HasColumnType("int");

                    b.HasKey("CourseLearningOfStudentID");

                    b.HasIndex("CourseID");

                    b.HasIndex("StudentID");

                    b.HasIndex("TeacherID");

                    b.ToTable("CourseLearningOfStudents");
                });

            modelBuilder.Entity("SIM_Project.Models.CourseTeachOfTeacher", b =>
                {
                    b.Property<int>("CourseTeachOfTeacherID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CourseTeachOfTeacherID"));

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("TeacherID")
                        .HasColumnType("int");

                    b.HasKey("CourseTeachOfTeacherID");

                    b.HasIndex("CourseID");

                    b.HasIndex("TeacherID");

                    b.ToTable("CourseTeachOfTeachers");
                });

            modelBuilder.Entity("SIM_Project.Models.Grade", b =>
                {
                    b.Property<int>("GradeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("GradeID"));

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<string>("GradeValue")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<int>("TeacherID")
                        .HasColumnType("int");

                    b.HasKey("GradeID");

                    b.HasIndex("CourseID");

                    b.HasIndex("StudentID");

                    b.HasIndex("TeacherID");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("SIM_Project.Models.Programmer", b =>
                {
                    b.Property<int>("ProgrammerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ProgrammerID"));

                    b.Property<string>("ProgramName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ProgrammerID");

                    b.ToTable("Programmers");
                });

            modelBuilder.Entity("SIM_Project.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ScheduleID"));

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("TeacherID")
                        .HasColumnType("int");

                    b.HasKey("ScheduleID");

                    b.HasIndex("CourseID");

                    b.HasIndex("TeacherID");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("SIM_Project.Models.Semester", b =>
                {
                    b.Property<int>("SemesterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SemesterID"));

                    b.Property<string>("SemesterName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("SemesterID");

                    b.ToTable("Semesters");
                });

            modelBuilder.Entity("SIM_Project.Models.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("StudentID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProgrammerID")
                        .HasColumnType("int");

                    b.HasKey("StudentID");

                    b.HasIndex("ProgrammerID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SIM_Project.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("TeacherID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TeacherID");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("SIM_Project.Models.Course", b =>
                {
                    b.HasOne("SIM_Project.Models.Programmer", "Programmer")
                        .WithMany("Courses")
                        .HasForeignKey("ProgrammerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIM_Project.Models.Semester", "Semester")
                        .WithMany("Courses")
                        .HasForeignKey("SemesterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Programmer");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("SIM_Project.Models.CourseLearningOfStudent", b =>
                {
                    b.HasOne("SIM_Project.Models.Course", "Course")
                        .WithMany("CourseLearnings")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIM_Project.Models.Student", "Student")
                        .WithMany("CourseLearnings")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIM_Project.Models.Teacher", "Teacher")
                        .WithMany("CourseLearnings")
                        .HasForeignKey("TeacherID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("SIM_Project.Models.CourseTeachOfTeacher", b =>
                {
                    b.HasOne("SIM_Project.Models.Course", "Course")
                        .WithMany("CourseTeachings")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIM_Project.Models.Teacher", "Teacher")
                        .WithMany("CourseTeachings")
                        .HasForeignKey("TeacherID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("SIM_Project.Models.Grade", b =>
                {
                    b.HasOne("SIM_Project.Models.Course", "Course")
                        .WithMany("Grades")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIM_Project.Models.Student", "Student")
                        .WithMany("Grades")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIM_Project.Models.Teacher", "Teacher")
                        .WithMany("Grades")
                        .HasForeignKey("TeacherID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("SIM_Project.Models.Schedule", b =>
                {
                    b.HasOne("SIM_Project.Models.Course", "Course")
                        .WithMany("Schedules")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIM_Project.Models.Teacher", "Teacher")
                        .WithMany("Schedules")
                        .HasForeignKey("TeacherID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("SIM_Project.Models.Student", b =>
                {
                    b.HasOne("SIM_Project.Models.Programmer", "Programmer")
                        .WithMany("Students")
                        .HasForeignKey("ProgrammerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Programmer");
                });

            modelBuilder.Entity("SIM_Project.Models.Course", b =>
                {
                    b.Navigation("CourseLearnings");

                    b.Navigation("CourseTeachings");

                    b.Navigation("Grades");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("SIM_Project.Models.Programmer", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("SIM_Project.Models.Semester", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("SIM_Project.Models.Student", b =>
                {
                    b.Navigation("CourseLearnings");

                    b.Navigation("Grades");
                });

            modelBuilder.Entity("SIM_Project.Models.Teacher", b =>
                {
                    b.Navigation("CourseLearnings");

                    b.Navigation("CourseTeachings");

                    b.Navigation("Grades");

                    b.Navigation("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
